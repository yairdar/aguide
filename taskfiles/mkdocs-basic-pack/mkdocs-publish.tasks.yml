version: "3"
vars:
  DOCS_UPSTREAM_ROOT_DIR: ..
  source_root: 
    sh: realpath . 2>/dev/null || echo .

tasks:
  resolve-upstream:
    desc: resolve venv with conda. required-arg=VENV_NAME
    preconditions: &ref_require_venv
    - sh: "[[ '{{.DOCS_UPSTREAM_REPO}}' != '' ]]"
      msg: required argument is not provided .@@dict arg_name=VENV_NAME
    status:
    - test -e {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}
    # && test -f {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}/.git
    cmds:
    - rm -rf {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}
    - mkdir -p {{.DOCS_UPSTREAM_ROOT_DIR}}
    - git clone {{.DOCS_UPSTREAM_REPO}} {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}

  remove-upstream:
    desc: remove-upstream --force required
    preconditions: &ref_require_venv
    - sh: "[[ '{{.DOCS_UPSTREAM_REPO}}' != '' ]]"
      msg: required argument is not provided .@@dict arg_name=VENV_NAME
    status:
    - true
    cmds:
    - rm -rf {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}

  update-pull-upstream:
    desc: update upstream before publish]
    deps:
    - task: resolve-upstream
    cmds:
    - git -C {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}} pull

  rebuild-and-prepublish:
    desc: task docs-builder:build-site 
    deps:
    - task: update-pull-upstream
    cmds:
    # assume docks-builder
    - task docs-builder:build-site
    - task: prepublish-to-local-upstream

  prepublish-to-local-upstream:
    desc: copy from __localbuild__/docs/site to {{.pub_dir}}
    vars:       
      site_dir: 
        sh: cat {{.source_root}}/mkdocs.yml | yq e .site_dir
      pub_dir: '{{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}'
    cmds:
      # - task: update-upstream
      # - rm -rf relrepos/yairdar.github.io/aguide
      - rm -rf {{.site_dir}}/LICENSE
      - rm -rf {{.site_dir}}/Taskfile.yml
      - rm -rf {{.site_dir}}/mkdocs.yml
      - |-
        ls -d -- {{.site_dir}}/* \
        | xargs -I{}  \
          cp -r {} {{.pub_dir}}
      - cp {{.site_dir}}/*.html {{.pub_dir}}
      - cp {{.site_dir}}/*.xml {{.pub_dir}}
      - cp {{.site_dir}}/*.xml.* {{.pub_dir}}
      # - rclone copy {{.site_dir}} {{.pub_dir}}

  publish-local-upstream-to-remote:
    desc: publish (git push) from local repo to remote
    cmds:
      - task -d {{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}} git:publish-changes

  publish-site-flow:
    desc: _
    cmds:
      - task: prepublish-to-local-upstream
      - task: publish-local-upstream-to-remote
  
  publish-site-full-flow:
    desc: _
    cmds:
      - task: update-pull-upstream
      - task: prepublish-to-local-upstream
      - task: publish-local-upstream-to-remote
  
  git:publish-changes:
    desc: add, commit and push to origin
    args:
      msg: msg prefix
    vars:
      tid: $(date -u +%Y-%m-%d--%H-%M-%S)
      _git_prj: '{{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}'
    cmds:
      - git -C {{._git_prj}} add --all | true
      - |-
        git -C {{._git_prj}} commit -am"{{.msg}} .@@tid={{.tid}}" \
        && git -C {{._git_prj}} push

# >
  serve-published:
#
# ```yaml
    desc: serve static site with python server
    # silent: yes
    vars:
      # site_port: serving port
      site_port: '{{ default "15578" .site_port }}'

      # source_root: fs path to root of site
      source_root: '{{ default "." .source_root }}'
      _git_prj: '{{.DOCS_UPSTREAM_ROOT_DIR}}/{{.DOCS_UPSTREAM_DIR}}'
    dir: '{{._git_prj}}'
    cmds:
      - echo "Exposing at $(pwd)"
      - echo "See comipled site at http://localhost:{{.site_port}}"
      - python -m http.server  {{.site_port}}
# ```